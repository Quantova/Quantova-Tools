// // Quantum-Resistant Key Encapsulation and Decapsulation Example using Kyber1024
// //
// // This code demonstrates how two parties (Sender and Receiver) securely agree on a
// // shared secret using the quantum-resistant Key Encapsulation Mechanism (KEM) algorithm: Kyber1024.
// // Kyber is a post-quantum cryptographic algorithm designed to resist attacks by quantum computers.

// // Import necessary cryptographic libraries from pqcrypto-kyber and pqcrypto-traits
// use pqcrypto_kyber::kyber1024;
// use pqcrypto_traits::kem::{Ciphertext, PublicKey, SecretKey, SharedSecret};
// use hex;

// fn main() {
//     // === Step 1: Receiver Key Generation ===
//     // The receiver generates a key pair consisting of:
//     // - Public Key (pk): Used for encryption by the sender
//     // - Secret Key (sk): Used for decryption by the receiver
//     let (pk, sk) = kyber1024::keypair();
//     println!("Kyber1024 Public Key: {}", hex::encode(pk.as_bytes()));

//     // === Step 2: Sender Encapsulates a Shared Secret ===
//     // The sender encrypts (encapsulates) a shared secret using the receiver's public key.
//     // This step generates:
//     // - A ciphertext: Encrypted data containing the shared secret
//     // - A shared secret: The secret that both parties will agree upon securely
//     let (sender_shared_secret, ciphertext) = kyber1024::encapsulate(&pk);
//     println!("Ciphertext: {}", hex::encode(ciphertext.as_bytes()));
//     println!("Sender's Shared Secret: {}", hex::encode(sender_shared_secret.as_bytes()));

//     // === Step 3: Receiver Decapsulates the Shared Secret ===
//     // The receiver uses their secret key to decrypt (decapsulate) the ciphertext and retrieve
//     // the shared secret generated by the sender.
//     let receiver_shared_secret = kyber1024::decapsulate(&ciphertext, &sk);
//     println!("Receiver's Shared Secret: {}", hex::encode(receiver_shared_secret.as_bytes()));

//     // === Step 4: Validate Shared Secrets ===
//     // Both sender and receiver should have the same shared secret if encryption and decryption
//     // were successful. We compare their byte representations to confirm.
//     if sender_shared_secret.as_bytes() == receiver_shared_secret.as_bytes() {
//         println!("✅ Shared secrets match! Kyber1024 KEM successful.");
//     } else {
//         println!("❌ Shared secrets DO NOT match!");
//     }
// }
